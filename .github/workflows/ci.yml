name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  PORT: 80

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Run unit tests
        run: go test ./...

  lint:
    name: GoLint
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1

      - name: Run linting
        run: golangci-lint run

  format:
    name: GoFmt
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Run go fmt
        run: go fmt ./...

  deploy:
    name: Deploy to caprover
    needs: [format]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://ip.jaw.dev/

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest

      - name: Deploy Image to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: '${{ secrets.CAPROVER_SERVER }}'
          app: '${{ secrets.APP_NAME }}'
          token: '${{ secrets.APP_TOKEN }}'
          image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
